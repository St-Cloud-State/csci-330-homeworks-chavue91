Script started on 2025-02-18 21:40:12+00:00 [TERM="xterm-256color" TTY="/dev/pts/0" COLUMNS="228" LINES="15"]
[0;32m@chavue91 [0mâžœ [1;34m/workspaces/csci-330-homeworks-chavue91/Hwork3 [0;36m([1;31mmain[0;36m) [0m$ exitsbclcat bottom-up-mergesort.lisp[5Pd sbcl-1.4.3-x86-linux
[0;32m@chavue91 [0mâžœ [1;34m/workspaces/csci-330-homeworks-chavue91/Hwork3/sbcl-1.4.3-x86-linux [0;36m([1;31mmain[0;36m) [0m$ cat insertionsort.lisp
(defun insert-sorted (x sorted)
  "Inserts element x into the sorted list in ascending order."
  (cond
    ((null sorted) (list x))  ; Base case: inserting into empty list
    ((<= x (car sorted)) (cons x sorted))  ; Insert x before first larger element
    (t (cons (car sorted) (insert-sorted x (cdr sorted))))))  ; Recurse to find position

(defun insertion-sort-helper (sorted unsorted)
  "Recursively moves elements from unsorted to sorted list."
  (if (null unsorted)  ; Base case: when unsorted is empty, return sorted list
      sorted
      (insertion-sort-helper (insert-sorted (car unsorted) sorted) (cdr unsorted))))  ; Insert first item and recurse

(defun insertion-sort (lst)
  "Fully declarative insertion sort."
  (insertion-sort-helper '() lst))  ; Start with empty sorted list

;; Example Usage
(insertion-sort '(7 3 5 2 9 1 4))
[0;32m@chavue91 [0mâžœ [1;34m/workspaces/csci-330-homeworks-chavue91/Hwork3/sbcl-1.4.3-x86-linux [0;36m([1;31mmain[0;36m) [0m$ sbcl
This is SBCL 1.4.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.
* (load insertionsort.l               "ine sertionsort.lisp")

T
* (symbol-function 'insertion-sort)

#<FUNCTION INSERTION-SORT>
* (insertion-sort '(5 3 4 25 2 1 4 5 6 8 9 40 10 12 5 6))

(1 2 3 4 4 5 5 5 6 6 8 9 10 12 25 40)
* (insertion-sort '(4 8 5 6 7 8 4 3 12 1 2))

(1 2 3 4 4 5 6 7 8 8 12)
* (insertion-sort '(5 6 5 2 1 3 4 5 7 14 15 12 10 9 12 10 11 12))

(1 2 3 4 5 5 5 6 7 9 10 10 11 12 12 12 14 15)
* (SB-EXT:EXIT)
[0;32m@chavue91 [0mâžœ [1;34m/workspaces/csci-330-homeworks-chavue91/Hwork3/sbcl-1.4.3-x86-linux [0;36m([1;31mmain[0;36m) [0m$ exit
exit

Script done on 2025-02-18 21:42:06+00:00 [COMMAND_EXIT_CODE="0"]
