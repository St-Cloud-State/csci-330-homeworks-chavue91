Script started on 2025-02-18 21:34:20+00:00 [TERM="xterm-256color" TTY="/dev/pts/0" COLUMNS="228" LINES="15"]
[0;32m@chavue91 [0mâžœ [1;34m/workspaces/csci-330-homeworks-chavue91/Hwork3 [0;36m([1;31mmain[0;36m) [0m$ cd sbcl-1.4.3-x86-linux
[0;32m@chavue91 [0mâžœ [1;34m/workspaces/csci-330-homeworks-chavue91/Hwork3/sbcl-1.4.3-x86-linux [0;36m([1;31mmain[0;36m) [0m$ cat mergesort.lisp
(defun partition (lst left right)
  "Splits lst into two."
  (cond
    ((null lst) (values (reverse left) (reverse right)))  ; Base case: return reversed halves
    ((null (cdr lst)) (values (reverse (cons (car lst) left)) (reverse right))) ; One item left, add to left
    (t (partition (cddr lst) (cons (car lst) left) (cons (cadr lst) right)))))  ; Split into two lists

(defun merge-lists (lst1 lst2)
  "Merges two sorted lists into one sorted list."
  (cond
    ((null lst1) lst2)  ; If lst1 is empty, return lst2
    ((null lst2) lst1)  ; If lst2 is empty, return lst1
    ((<= (car lst1) (car lst2)) (cons (car lst1) (merge-lists (cdr lst1) lst2)))  ; Take from lst1
    (t (cons (car lst2) (merge-lists lst1 (cdr lst2))))))  ; Take from lst2

(defun mergesort (lst)
  "Sorts lst using the Mergesort algorithm recursively."
  (if (or (null lst) (null (cdr lst)))  ; Base case: empty or single element list
      lst
      (multiple-value-bind (left right) (partition lst '() '())  ; Partition into two halves
        (merge-lists (mergesort left) (mergesort right)))))  ; Recursively sort and merge


;; Run the sorting function and print the result
(format t "Sorted list: ~a~%" (mergesort '(3 1 4 1 5 9 2 6 5 3 5)))[0;32m@chavue91 [0mâžœ [1;34m/workspaces/csci-330-homeworks-chavue91/Hwork3/sbcl-1.4.3-x86-linux [0;36m([1;31mmain[0;36m) [0m$ sbcl
This is SBCL 1.4.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.
* (load "mergesort.lisp")
Sorted list: (1 1 2 3 3 4 5 5 5 6 9)
T
* (symbol-function 'mergesort)

#<FUNCTION MERGESORT>
* (mergesort '(10 12 13 5 6 7 4 2 3 4 5 8 10 9 8 12))

(2 3 4 4 5 5 6 7 8 8 9 10 10 12 12 13)
* (mergesort '(5 6 2 3 8 9 4 5 7 8 2 4 10))

(2 2 3 4 4 5 5 6 7 8 8 9 10)
* (mergesort '(5 3 5 6 4 8 9 7 1))

(1 3 4 5 5 6 7 8 9)
* (s SB-EXT:EXIT)
[0;32m@chavue91 [0mâžœ [1;34m/workspaces/csci-330-homeworks-chavue91/Hwork3/sbcl-1.4.3-x86-linux [0;36m([1;31mmain[0;36m) [0m$ exit
exit

Script done on 2025-02-18 21:36:43+00:00 [COMMAND_EXIT_CODE="0"]
